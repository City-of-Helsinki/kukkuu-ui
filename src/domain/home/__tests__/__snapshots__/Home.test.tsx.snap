// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders snapshot correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Home>
    <div
      className="home"
    >
      <div
        className="hero"
      >
        <div
          className="heroContainer"
        >
          <h1>
            Kulttuurin Kummilapset 2020
          </h1>
          <p
            className="description"
          >
            Helsingin Kaupunginorkesteri kutsuu kummilapsikseen kaikki vuonna 2020 syntyneet Helsinkiläislapset! Lapsi perheineen kutsutaan kahdesti vuodessa nauttimaan KHO:n järjestämästä kulttuurista täysin ilmaiseksi! Liity mukaan!
          </p>
          <Connect(HomePreliminaryForm)>
            <HomePreliminaryForm
              isAuthenticated={false}
              setFormValues={[Function]}
              stateFormValues={
                Object {
                  "agree": false,
                  "child": Object {
                    "birthdate": "",
                    "firstName": "",
                    "homeCity": "",
                    "lastName": "",
                  },
                  "guardian": Object {
                    "email": "",
                    "firstName": "",
                    "lastName": "",
                    "phoneNumber": "",
                    "relationship": "",
                  },
                  "verifyInformation": false,
                }
              }
            >
              <div
                className="homeForm"
              >
                <Formik
                  initialErrors={
                    Object {
                      "childBirthdate": "validation.date.invalidFormat",
                    }
                  }
                  initialValues={
                    Object {
                      "child": Object {
                        "birthdate": Object {
                          "day": "",
                          "month": "",
                          "year": "",
                        },
                        "homeCity": "",
                      },
                      "verifyInformation": false,
                    }
                  }
                  onSubmit={[Function]}
                  validate={[Function]}
                >
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="inputWrapper"
                    >
                      <FormikConnect(FieldArrayInner)
                        name="child.birthdate"
                        render={[Function]}
                      >
                        <FieldArrayInner
                          formik={
                            Object {
                              "dirty": false,
                              "errors": Object {
                                "childBirthdate": "validation.date.invalidFormat",
                              },
                              "getFieldMeta": [Function],
                              "getFieldProps": [Function],
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialErrors": Object {
                                "childBirthdate": "validation.date.invalidFormat",
                              },
                              "initialStatus": undefined,
                              "initialTouched": Object {},
                              "initialValues": Object {
                                "child": Object {
                                  "birthdate": Object {
                                    "day": "",
                                    "month": "",
                                    "year": "",
                                  },
                                  "homeCity": "",
                                },
                                "verifyInformation": false,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "status": undefined,
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validateOnMount": false,
                              "values": Object {
                                "child": Object {
                                  "birthdate": Object {
                                    "day": "",
                                    "month": "",
                                    "year": "",
                                  },
                                  "homeCity": "",
                                },
                                "verifyInformation": false,
                              },
                            }
                          }
                          name="child.birthdate"
                          render={[Function]}
                          validateOnChange={true}
                        >
                          <BirthdateFormField
                            form={
                              Object {
                                "dirty": false,
                                "errors": Object {
                                  "childBirthdate": "validation.date.invalidFormat",
                                },
                                "getFieldMeta": [Function],
                                "getFieldProps": [Function],
                                "handleBlur": [Function],
                                "handleChange": [Function],
                                "handleReset": [Function],
                                "handleSubmit": [Function],
                                "initialErrors": Object {
                                  "childBirthdate": "validation.date.invalidFormat",
                                },
                                "initialStatus": undefined,
                                "initialTouched": Object {},
                                "initialValues": Object {
                                  "child": Object {
                                    "birthdate": Object {
                                      "day": "",
                                      "month": "",
                                      "year": "",
                                    },
                                    "homeCity": "",
                                  },
                                  "verifyInformation": false,
                                },
                                "isSubmitting": false,
                                "isValid": false,
                                "isValidating": false,
                                "registerField": [Function],
                                "resetForm": [Function],
                                "setErrors": [Function],
                                "setFieldError": [Function],
                                "setFieldTouched": [Function],
                                "setFieldValue": [Function],
                                "setFormikState": [Function],
                                "setStatus": [Function],
                                "setSubmitting": [Function],
                                "setTouched": [Function],
                                "setValues": [Function],
                                "status": undefined,
                                "submitCount": 0,
                                "submitForm": [Function],
                                "touched": Object {},
                                "unregisterField": [Function],
                                "validateField": [Function],
                                "validateForm": [Function],
                                "validateOnBlur": true,
                                "validateOnChange": true,
                                "validateOnMount": false,
                                "values": Object {
                                  "child": Object {
                                    "birthdate": Object {
                                      "day": "",
                                      "month": "",
                                      "year": "",
                                    },
                                    "homeCity": "",
                                  },
                                  "verifyInformation": false,
                                },
                              }
                            }
                            handleInsert={[Function]}
                            handleMove={[Function]}
                            handlePop={[Function]}
                            handlePush={[Function]}
                            handleRemove={[Function]}
                            handleReplace={[Function]}
                            handleSwap={[Function]}
                            handleUnshift={[Function]}
                            insert={[Function]}
                            move={[Function]}
                            name="child.birthdate"
                            pop={[Function]}
                            push={[Function]}
                            remove={[Function]}
                            replace={[Function]}
                            swap={[Function]}
                            unshift={[Function]}
                          >
                            <div
                              className="birthdateField"
                            >
                              <label>
                                Lapsen syntymäaika
                              </label>
                              <div
                                className="inputWrapper"
                              >
                                <EnhancedInputField
                                  component={[Function]}
                                  max={31}
                                  min={1}
                                  name="child.birthdate.day"
                                  placeholder="pv"
                                  type="number"
                                  validate={[Function]}
                                >
                                  <Field
                                    component={[Function]}
                                    max={31}
                                    min={1}
                                    name="child.birthdate.day"
                                    placeholder="pv"
                                    type="number"
                                    validate={[Function]}
                                  >
                                    <InputField
                                      field={
                                        Object {
                                          "name": "child.birthdate.day",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "value": "",
                                        }
                                      }
                                      form={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {
                                            "childBirthdate": "validation.date.invalidFormat",
                                          },
                                          "getFieldMeta": [Function],
                                          "getFieldProps": [Function],
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialErrors": Object {
                                            "childBirthdate": "validation.date.invalidFormat",
                                          },
                                          "initialStatus": undefined,
                                          "initialTouched": Object {},
                                          "initialValues": Object {
                                            "child": Object {
                                              "birthdate": Object {
                                                "day": "",
                                                "month": "",
                                                "year": "",
                                              },
                                              "homeCity": "",
                                            },
                                            "verifyInformation": false,
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "validateOnMount": false,
                                          "values": Object {
                                            "child": Object {
                                              "birthdate": Object {
                                                "day": "",
                                                "month": "",
                                                "year": "",
                                              },
                                              "homeCity": "",
                                            },
                                            "verifyInformation": false,
                                          },
                                        }
                                      }
                                      max={31}
                                      min={1}
                                      placeholder="pv"
                                      type="number"
                                    >
                                      <div
                                        className="inputField"
                                      >
                                        <Input
                                          max={31}
                                          min={1}
                                          name="child.birthdate.day"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          placeholder="pv"
                                          type="number"
                                          value=""
                                        >
                                          <div
                                            className="inputWrapper numberInput"
                                          >
                                            <div
                                              className="inputTypeWrapper"
                                            >
                                              <input
                                                max={31}
                                                min={1}
                                                name="child.birthdate.day"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="pv"
                                                type="number"
                                                value=""
                                              />
                                            </div>
                                          </div>
                                        </Input>
                                        <div
                                          className="inputErrorMessage"
                                        />
                                      </div>
                                    </InputField>
                                  </Field>
                                </EnhancedInputField>
                                <div
                                  className="dot"
                                >
                                  .
                                </div>
                                <EnhancedInputField
                                  component={[Function]}
                                  max={12}
                                  min={1}
                                  name="child.birthdate.month"
                                  placeholder="kk"
                                  type="number"
                                  validate={[Function]}
                                >
                                  <Field
                                    component={[Function]}
                                    max={12}
                                    min={1}
                                    name="child.birthdate.month"
                                    placeholder="kk"
                                    type="number"
                                    validate={[Function]}
                                  >
                                    <InputField
                                      field={
                                        Object {
                                          "name": "child.birthdate.month",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "value": "",
                                        }
                                      }
                                      form={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {
                                            "childBirthdate": "validation.date.invalidFormat",
                                          },
                                          "getFieldMeta": [Function],
                                          "getFieldProps": [Function],
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialErrors": Object {
                                            "childBirthdate": "validation.date.invalidFormat",
                                          },
                                          "initialStatus": undefined,
                                          "initialTouched": Object {},
                                          "initialValues": Object {
                                            "child": Object {
                                              "birthdate": Object {
                                                "day": "",
                                                "month": "",
                                                "year": "",
                                              },
                                              "homeCity": "",
                                            },
                                            "verifyInformation": false,
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "validateOnMount": false,
                                          "values": Object {
                                            "child": Object {
                                              "birthdate": Object {
                                                "day": "",
                                                "month": "",
                                                "year": "",
                                              },
                                              "homeCity": "",
                                            },
                                            "verifyInformation": false,
                                          },
                                        }
                                      }
                                      max={12}
                                      min={1}
                                      placeholder="kk"
                                      type="number"
                                    >
                                      <div
                                        className="inputField"
                                      >
                                        <Input
                                          max={12}
                                          min={1}
                                          name="child.birthdate.month"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          placeholder="kk"
                                          type="number"
                                          value=""
                                        >
                                          <div
                                            className="inputWrapper numberInput"
                                          >
                                            <div
                                              className="inputTypeWrapper"
                                            >
                                              <input
                                                max={12}
                                                min={1}
                                                name="child.birthdate.month"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="kk"
                                                type="number"
                                                value=""
                                              />
                                            </div>
                                          </div>
                                        </Input>
                                        <div
                                          className="inputErrorMessage"
                                        />
                                      </div>
                                    </InputField>
                                  </Field>
                                </EnhancedInputField>
                                <div
                                  className="dot"
                                >
                                  .
                                </div>
                                <EnhancedInputField
                                  component={[Function]}
                                  min={2019}
                                  name="child.birthdate.year"
                                  placeholder="vuosi"
                                  type="number"
                                  validate={[Function]}
                                >
                                  <Field
                                    component={[Function]}
                                    min={2019}
                                    name="child.birthdate.year"
                                    placeholder="vuosi"
                                    type="number"
                                    validate={[Function]}
                                  >
                                    <InputField
                                      field={
                                        Object {
                                          "name": "child.birthdate.year",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "value": "",
                                        }
                                      }
                                      form={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {
                                            "childBirthdate": "validation.date.invalidFormat",
                                          },
                                          "getFieldMeta": [Function],
                                          "getFieldProps": [Function],
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialErrors": Object {
                                            "childBirthdate": "validation.date.invalidFormat",
                                          },
                                          "initialStatus": undefined,
                                          "initialTouched": Object {},
                                          "initialValues": Object {
                                            "child": Object {
                                              "birthdate": Object {
                                                "day": "",
                                                "month": "",
                                                "year": "",
                                              },
                                              "homeCity": "",
                                            },
                                            "verifyInformation": false,
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "validateOnMount": false,
                                          "values": Object {
                                            "child": Object {
                                              "birthdate": Object {
                                                "day": "",
                                                "month": "",
                                                "year": "",
                                              },
                                              "homeCity": "",
                                            },
                                            "verifyInformation": false,
                                          },
                                        }
                                      }
                                      min={2019}
                                      placeholder="vuosi"
                                      type="number"
                                    >
                                      <div
                                        className="inputField"
                                      >
                                        <Input
                                          min={2019}
                                          name="child.birthdate.year"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          placeholder="vuosi"
                                          type="number"
                                          value=""
                                        >
                                          <div
                                            className="inputWrapper numberInput"
                                          >
                                            <div
                                              className="inputTypeWrapper"
                                            >
                                              <input
                                                min={2019}
                                                name="child.birthdate.year"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="vuosi"
                                                type="number"
                                                value=""
                                              />
                                            </div>
                                          </div>
                                        </Input>
                                        <div
                                          className="inputErrorMessage"
                                        />
                                      </div>
                                    </InputField>
                                  </Field>
                                </EnhancedInputField>
                              </div>
                              <div
                                className="error"
                              />
                            </div>
                          </BirthdateFormField>
                        </FieldArrayInner>
                      </FormikConnect(FieldArrayInner)>
                      <EnhancedInputField
                        className="childHomeCity"
                        component={[Function]}
                        label="Lapsen kotipaikkakunta"
                        name="child.homeCity"
                        onChange={[Function]}
                        placeholder="Enter hometown city, currently only Helsinki supported"
                        required={true}
                        type="text"
                        validate={[Function]}
                        value=""
                      >
                        <Field
                          className="childHomeCity"
                          component={[Function]}
                          label="Lapsen kotipaikkakunta"
                          name="child.homeCity"
                          onChange={[Function]}
                          placeholder="Enter hometown city, currently only Helsinki supported"
                          required={true}
                          type="text"
                          validate={[Function]}
                        >
                          <InputField
                            className="childHomeCity"
                            field={
                              Object {
                                "name": "child.homeCity",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "value": "",
                              }
                            }
                            form={
                              Object {
                                "dirty": false,
                                "errors": Object {
                                  "childBirthdate": "validation.date.invalidFormat",
                                },
                                "getFieldMeta": [Function],
                                "getFieldProps": [Function],
                                "handleBlur": [Function],
                                "handleChange": [Function],
                                "handleReset": [Function],
                                "handleSubmit": [Function],
                                "initialErrors": Object {
                                  "childBirthdate": "validation.date.invalidFormat",
                                },
                                "initialStatus": undefined,
                                "initialTouched": Object {},
                                "initialValues": Object {
                                  "child": Object {
                                    "birthdate": Object {
                                      "day": "",
                                      "month": "",
                                      "year": "",
                                    },
                                    "homeCity": "",
                                  },
                                  "verifyInformation": false,
                                },
                                "isSubmitting": false,
                                "isValid": false,
                                "isValidating": false,
                                "registerField": [Function],
                                "resetForm": [Function],
                                "setErrors": [Function],
                                "setFieldError": [Function],
                                "setFieldTouched": [Function],
                                "setFieldValue": [Function],
                                "setFormikState": [Function],
                                "setStatus": [Function],
                                "setSubmitting": [Function],
                                "setTouched": [Function],
                                "setValues": [Function],
                                "status": undefined,
                                "submitCount": 0,
                                "submitForm": [Function],
                                "touched": Object {},
                                "unregisterField": [Function],
                                "validateField": [Function],
                                "validateForm": [Function],
                                "validateOnBlur": true,
                                "validateOnChange": true,
                                "validateOnMount": false,
                                "values": Object {
                                  "child": Object {
                                    "birthdate": Object {
                                      "day": "",
                                      "month": "",
                                      "year": "",
                                    },
                                    "homeCity": "",
                                  },
                                  "verifyInformation": false,
                                },
                              }
                            }
                            label="Lapsen kotipaikkakunta"
                            onChange={[Function]}
                            placeholder="Enter hometown city, currently only Helsinki supported"
                            required={true}
                            type="text"
                          >
                            <div
                              className="inputField"
                            >
                              <Input
                                className="childHomeCity"
                                label="Lapsen kotipaikkakunta"
                                name="child.homeCity"
                                onBlur={[Function]}
                                onChange={[Function]}
                                placeholder="Enter hometown city, currently only Helsinki supported"
                                required={true}
                                type="text"
                                value=""
                              >
                                <div
                                  className="inputWrapper textInput"
                                >
                                  <div
                                    className="inputTypeWrapper"
                                  >
                                    <label>
                                      Lapsen kotipaikkakunta*
                                    </label>
                                    <input
                                      name="child.homeCity"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      placeholder="Enter hometown city, currently only Helsinki supported"
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </div>
                              </Input>
                              <div
                                className="inputErrorMessage"
                              />
                            </div>
                          </InputField>
                        </Field>
                      </EnhancedInputField>
                    </div>
                    <EnhancedInputField
                      checked={false}
                      className="verifyInformationCheckbox"
                      component={[Function]}
                      label="Vakuutan antamani tiedot oikeaksi."
                      name="verifyInformation"
                      onChange={[Function]}
                      required={true}
                      type="checkbox"
                      value={false}
                    >
                      <Field
                        checked={false}
                        className="verifyInformationCheckbox"
                        component={[Function]}
                        label="Vakuutan antamani tiedot oikeaksi."
                        name="verifyInformation"
                        onChange={[Function]}
                        required={true}
                        type="checkbox"
                        validate={[Function]}
                      >
                        <InputField
                          checked={false}
                          className="verifyInformationCheckbox"
                          field={
                            Object {
                              "checked": false,
                              "name": "verifyInformation",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "value": false,
                            }
                          }
                          form={
                            Object {
                              "dirty": false,
                              "errors": Object {
                                "childBirthdate": "validation.date.invalidFormat",
                              },
                              "getFieldMeta": [Function],
                              "getFieldProps": [Function],
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialErrors": Object {
                                "childBirthdate": "validation.date.invalidFormat",
                              },
                              "initialStatus": undefined,
                              "initialTouched": Object {},
                              "initialValues": Object {
                                "child": Object {
                                  "birthdate": Object {
                                    "day": "",
                                    "month": "",
                                    "year": "",
                                  },
                                  "homeCity": "",
                                },
                                "verifyInformation": false,
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "status": undefined,
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "validateOnMount": false,
                              "values": Object {
                                "child": Object {
                                  "birthdate": Object {
                                    "day": "",
                                    "month": "",
                                    "year": "",
                                  },
                                  "homeCity": "",
                                },
                                "verifyInformation": false,
                              },
                            }
                          }
                          label="Vakuutan antamani tiedot oikeaksi."
                          onChange={[Function]}
                          required={true}
                          type="checkbox"
                        >
                          <div
                            className="inputField"
                          >
                            <Input
                              checked={false}
                              className="verifyInformationCheckbox"
                              label="Vakuutan antamani tiedot oikeaksi."
                              name="verifyInformation"
                              onBlur={[Function]}
                              onChange={[Function]}
                              required={true}
                              type="checkbox"
                              value={false}
                            >
                              <div
                                className="inputWrapper checkboxInput"
                              >
                                <div
                                  className="inputTypeWrapper"
                                >
                                  <label>
                                    Vakuutan antamani tiedot oikeaksi.*
                                  </label>
                                  <input
                                    checked={false}
                                    name="verifyInformation"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value={false}
                                  />
                                </div>
                              </div>
                            </Input>
                            <div
                              className="inputErrorMessage"
                            />
                          </div>
                        </InputField>
                      </Field>
                    </EnhancedInputField>
                    <Button
                      className="submitButton"
                      disabled={true}
                      type="submit"
                    >
                      <div
                        className="submitButton buttonWrapper"
                      >
                        <button
                          disabled={true}
                          type="submit"
                        >
                          Ilmoittaudu mukaan
                        </button>
                      </div>
                    </Button>
                  </form>
                </Formik>
              </div>
            </HomePreliminaryForm>
          </Connect(HomePreliminaryForm)>
        </div>
      </div>
    </div>
  </Home>
</Provider>
`;
